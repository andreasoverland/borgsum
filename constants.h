
const int Piece_e = 0;

const int Piece_P = 1;
const int Piece_R = 2;
const int Piece_N = 4;
const int Piece_B = 8;
const int Piece_Q = 16;
const int Piece_K = 32;

const int Piece_p = 64;
const int Piece_r = 128;
const int Piece_n = 256;
const int Piece_b = 512;
const int Piece_q = 1024;
const int Piece_k = 2048;

const int Pieces_Nn = 4 | 256;
const int Pieces_PpKk = 1 | 64 | 32 | 2048;

const int Pieces_qbpk = 1024 | 512 | 2048 | 64 ;
const int Pieces_qbk  = 1024 | 512 | 2048;
const int Pieces_qrk  = 1024 | 128 | 2048;
const int Pieces_qb   = 1024 | 512;
const int Pieces_qr   = 1024 | 128;


const int Pieces_QBPK = 16 | 8 | 1 | 32;
const int Pieces_QBK =  16 | 8 | 32;
const int Pieces_QRK =  16 | 2 | 32;
const int Pieces_QB =   16 | 8;
const int Pieces_QR =   16 | 2;

const int WHITE_MASK = 0b000000111111;
const int BLACK_MASK = 0b111111000000;

const long MASK_CASTLING_WHITE_QUEEN_SIDE = (1l << 7) | (1l << 3);
const long MASK_CASTLING_WHITE_KING_SIDE = 1 | (1l << 3);
const long MASK_CASTLING_BLACK_QUEEN_SIDE = (1l << 56) | (1l << 59);
const long MASK_CASTLING_BLACK_KING_SIDE = (1l << 63) | (1l << 59);

const int MASK_LAST_MOVE_WAS_CAPTURE = 1;
const int MASK_LAST_MOVE_WAS_EP_STRIKE = 2;
const int MASK_LAST_MOVE_WAS_PROMO = 4;
const int MASK_LAST_MOVE_WAS_CASTLING_QUEEN_SIDE = 8;
const int MASK_LAST_MOVE_WAS_CASTLING_KING_SIDE = 16;

const int MASK_EMPTY = 0;

const int MASK_WHITE_KING_CHECKED = 0b0000000111111;
const int MASK_BLACK_KING_CHECKED = 0b0111111000000;
const int MASK_KING_IS_MATED      = 0b1000000000000;

// bitboard spesific indexes
const int IDX_WHITE_PIECES = 32;
const int IDX_BLACK_PIECES = 33;
const int IDX_ALL_PIECES = 34;

const int IDX_WHITE_PAWNS = 35;
const int IDX_WHITE_ROOKS = 36;
const int IDX_WHITE_KNIGHTS = 37;
const int IDX_WHITE_BISHOPS = 38;
const int IDX_WHITE_QUEENS = 39;
const int IDX_WHITE_KING = 40;

const int IDX_BLACK_PAWNS = 41;
const int IDX_BLACK_ROOKS = 42;
const int IDX_BLACK_KNIGHTS = 43;
const int IDX_BLACK_BISHOPS = 44;
const int IDX_BLACK_QUEENS = 45;
const int IDX_BLACK_KING = 46;

// indexes 47..54 are free

// back to regular indexes

const int IDX_CASTLING = 65;
const int IDX_MOVE_NUM = 66;
const int IDX_TURN = 68;
const int IDX_WHITE_KING_INDEX = 69;
const int IDX_BLACK_KING_INDEX = 70;

const int IDX_CHECK_STATUS = 71;
const int IDX_LAST_MOVE_WAS = 72;
const int IDX_EP_IDX = 73;

const int IDX_START_INFLUENCE_MAP = 74;

const int NUM_BYTES_TO_COPY = 71;
const int NUM_BYTES = 91;

const int A1 = 56;
const int B1 = 57;
const int C1 = 58;
const int D1 = 59;
const int E1 = 60;
const int F1 = 61;
const int G1 = 62;
const int H1 = 63;

const int A8 = 0;
const int B8 = 1;
const int C8 = 2;
const int D8 = 3;
const int E8 = 4;
const int F8 = 5;
const int G8 = 6;
const int H8 = 7;


const int MOVE_MATRIX_LENGTH = 16;
const int MOVE_MATRIX[] = {
    -1, -1, 0, -1, 1, -1,
    -1,  0,        1,  0,
    -1,  1, 0,  1, 1,  1
};

const int KNIGHT_MOVE_MATRIX_LENGTH = 16;
const int KNIGHT_MOVE_MATRIX[] = {
    -1, -2, -1, 2, -2, -1, -2, 1,
     1, -2,  1, 2,  2, -1,  2, 1
};
const int KNIGHT_MOVE_MATRIX_2[] = {
  -1, -2, -1, 2, 1, -2, 1, 2, -1
};

const int BISHOP_MOVE_MATRIX_LENGTH = 8;
const int BISHOP_MOVE_MATRIX[] = {
    -1, -1, 1, -1,
    -1,  1, 1,  1
};

const int ROOK_MOVE_MATRIX_LENGTH = 8;
const int ROOK_MOVE_MATRIX[] = {
    -1, 0, 0, -1,
     1, 0, 0,  1
};

const int a = Piece_q | Piece_b;
const int b = Piece_q | Piece_b | Piece_k | Piece_p;
const int c = Piece_q | Piece_b | Piece_k;
const int d = Piece_q | Piece_r;
const int e = Piece_q | Piece_r | Piece_k;

const int A = Piece_Q | Piece_B;
const int B = Piece_Q | Piece_B | Piece_K | Piece_P;
const int C = Piece_Q | Piece_B | Piece_K;
const int D = Piece_Q | Piece_R;
const int E = Piece_Q | Piece_R | Piece_K;

int allComparePieces[8*16] = {
    0, C, A, A, A, A, A, A,
    0, E, D, D, D, D, D, D,
    0, C, A, A, A, A, A, A,
    0, E, D, D, D, D, D, D,
    0, E, D, D, D, D, D, D,
    0, B, A, A, A, A, A, A,
    0, E, D, D, D, D, D, D,
    0, B, A, A, A, A, A, A,
    0, b, a, a, a, a, a, a,
    0, e, d, d, d, d, d, d,
    0, b, a, a, a, a, a, a,
    0, e, d, d, d, d, d, d,
    0, e, d, d, d, d, d, d,
    0, c, a, a, a, a, a, a,
    0, e, d, d, d, d, d, d,
    0, c, a, a, a, a, a, a,
};

// BITMAPS

const long R8 = 0xFF00000000000000;
const long R7 = 0x00FF000000000000;
const long R6 = 0x0000FF0000000000;
const long R5 = 0x000000FF00000000;
const long R4 = 0x00000000FF000000;
const long R3 = 0x0000000000FF0000;
const long R2 = 0x000000000000FF00;
const long R1 = 0x00000000000000FF;

const long R1_R8 = R8|R1;

const long FA = 0x8080808080808080;
const long FB = 0x4040404040404040;
const long FC = 0x2020202020202020;
const long FD = 0x1010101010101010;
const long FE = 0x0808080808080808;
const long FF = 0x0404040404040404;
const long FG = 0x0202020202020202;
const long FH = 0x0101010101010101;

// GENERATED BITMAPS
const long KING_ATTACK_MAPS[] = {
	0x40c0000000000000,
	0xa0e0000000000000,
	0x5070000000000000,
	0x2838000000000000,
	0x141c000000000000,
	0x0a0e000000000000,
	0x0507000000000000,
	0x0203000000000000,
	0xc040c00000000000,
	0xe0a0e00000000000,
	0x7050700000000000,
	0x3828380000000000,
	0x1c141c0000000000,
	0x0e0a0e0000000000,
	0x0705070000000000,
	0x0302030000000000,
	0x00c040c000000000,
	0x00e0a0e000000000,
	0x0070507000000000,
	0x0038283800000000,
	0x001c141c00000000,
	0x000e0a0e00000000,
	0x0007050700000000,
	0x0003020300000000,
	0x0000c040c0000000,
	0x0000e0a0e0000000,
	0x0000705070000000,
	0x0000382838000000,
	0x00001c141c000000,
	0x00000e0a0e000000,
	0x0000070507000000,
	0x0000030203000000,
	0x000000c040c00000,
	0x000000e0a0e00000,
	0x0000007050700000,
	0x0000003828380000,
	0x0000001c141c0000,
	0x0000000e0a0e0000,
	0x0000000705070000,
	0x0000000302030000,
	0x00000000c040c000,
	0x00000000e0a0e000,
	0x0000000070507000,
	0x0000000038283800,
	0x000000001c141c00,
	0x000000000e0a0e00,
	0x0000000007050700,
	0x0000000003020300,
	0x0000000000c040c0,
	0x0000000000e0a0e0,
	0x0000000000705070,
	0x0000000000382838,
	0x00000000001c141c,
	0x00000000000e0a0e,
	0x0000000000070507,
	0x0000000000030203,
	0x000000000000c040,
	0x000000000000e0a0,
	0x0000000000007050,
	0x0000000000003828,
	0x0000000000001c14,
	0x0000000000000e0a,
	0x0000000000000705,
	0x0000000000000302,
};// KING_ATTACK_MAPS


const long WHITE_PAWN_ATTACK_MAPS[] = {
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x4000000000000000,
	0xa000000000000000,
	0x5000000000000000,
	0x2800000000000000,
	0x1400000000000000,
	0x0a00000000000000,
	0x0500000000000000,
	0x0200000000000000,
	0x0040000000000000,
	0x00a0000000000000,
	0x0050000000000000,
	0x0028000000000000,
	0x0014000000000000,
	0x000a000000000000,
	0x0005000000000000,
	0x0002000000000000,
	0x0000400000000000,
	0x0000a00000000000,
	0x0000500000000000,
	0x0000280000000000,
	0x0000140000000000,
	0x00000a0000000000,
	0x0000050000000000,
	0x0000020000000000,
	0x0000004000000000,
	0x000000a000000000,
	0x0000005000000000,
	0x0000002800000000,
	0x0000001400000000,
	0x0000000a00000000,
	0x0000000500000000,
	0x0000000200000000,
	0x0000000040000000,
	0x00000000a0000000,
	0x0000000050000000,
	0x0000000028000000,
	0x0000000014000000,
	0x000000000a000000,
	0x0000000005000000,
	0x0000000002000000,
	0x0000000000400000,
	0x0000000000a00000,
	0x0000000000500000,
	0x0000000000280000,
	0x0000000000140000,
	0x00000000000a0000,
	0x0000000000050000,
	0x0000000000020000,
	0x0000000000004000,
	0x000000000000a000,
	0x0000000000005000,
	0x0000000000002800,
	0x0000000000001400,
	0x0000000000000a00,
	0x0000000000000500,
	0x0000000000000200,
};// WHITE_PAWN_ATTACK_MAPS


const long BLACK_PAWN_ATTACK_MAPS[] = {
	0x0040000000000000,
	0x00a0000000000000,
	0x0050000000000000,
	0x0028000000000000,
	0x0014000000000000,
	0x000a000000000000,
	0x0005000000000000,
	0x0002000000000000,
	0x0000400000000000,
	0x0000a00000000000,
	0x0000500000000000,
	0x0000280000000000,
	0x0000140000000000,
	0x00000a0000000000,
	0x0000050000000000,
	0x0000020000000000,
	0x0000004000000000,
	0x000000a000000000,
	0x0000005000000000,
	0x0000002800000000,
	0x0000001400000000,
	0x0000000a00000000,
	0x0000000500000000,
	0x0000000200000000,
	0x0000000040000000,
	0x00000000a0000000,
	0x0000000050000000,
	0x0000000028000000,
	0x0000000014000000,
	0x000000000a000000,
	0x0000000005000000,
	0x0000000002000000,
	0x0000000000400000,
	0x0000000000a00000,
	0x0000000000500000,
	0x0000000000280000,
	0x0000000000140000,
	0x00000000000a0000,
	0x0000000000050000,
	0x0000000000020000,
	0x0000000000004000,
	0x000000000000a000,
	0x0000000000005000,
	0x0000000000002800,
	0x0000000000001400,
	0x0000000000000a00,
	0x0000000000000500,
	0x0000000000000200,
	0x0000000000000040,
	0x00000000000000a0,
	0x0000000000000050,
	0x0000000000000028,
	0x0000000000000014,
	0x000000000000000a,
	0x0000000000000005,
	0x0000000000000002,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
};// BLACK_PAWN_ATTACK_MAPS


const long BLACK_PAWN_REVERSE_ATTACK_MAPS[] = {
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x4000000000000000,
	0xa000000000000000,
	0x5000000000000000,
	0x2800000000000000,
	0x1400000000000000,
	0x0a00000000000000,
	0x0500000000000000,
	0x0200000000000000,
	0x0040000000000000,
	0x00a0000000000000,
	0x0050000000000000,
	0x0028000000000000,
	0x0014000000000000,
	0x000a000000000000,
	0x0005000000000000,
	0x0002000000000000,
	0x0000400000000000,
	0x0000a00000000000,
	0x0000500000000000,
	0x0000280000000000,
	0x0000140000000000,
	0x00000a0000000000,
	0x0000050000000000,
	0x0000020000000000,
	0x0000004000000000,
	0x000000a000000000,
	0x0000005000000000,
	0x0000002000000000,
	0x0000000400000000,
	0x0000000a00000000,
	0x0000000500000000,
	0x0000000200000000,
	0x0000000040000000,
	0x00000000a0000000,
	0x0000000050000000,
	0x0000000028000000,
	0x0000000014000000,
	0x000000000a000000,
	0x0000000005000000,
	0x0000000002000000,
	0x0000000000400000,
	0x0000000000a00000,
	0x0000000000500000,
	0x0000000000280000,
	0x0000000000140000,
	0x00000000000a0000,
	0x0000000000050000,
	0x0000000000020000,
	0x0000000000004000,
	0x000000000000a000,
	0x0000000000005000,
	0x0000000000002800,
	0x0000000000001400,
	0x0000000000000a00,
	0x0000000000000500,
	0x0000000000000200,
};// BLACK_PAWN_REVERSE_ATTACK_MAPS


const long N_ATTACK_MAPS[] = {
	0x0020400000000000,
	0x0010a00000000000,
	0x0088500000000000,
	0x0044280000000000,
	0x0022140000000000,
	0x00110a0000000000,
	0x0008050000000000,
	0x0004020000000000,
	0x2000204000000000,
	0x100010a000000000,
	0x8800885000000000,
	0x4400442800000000,
	0x2200221400000000,
	0x1100110a00000000,
	0x0800080500000000,
	0x0400040200000000,
	0x4020002040000000,
	0xa0100010a0000000,
	0x5088008850000000,
	0x2844004428000000,
	0x1422002214000000,
	0x0a1100110a000000,
	0x0508000805000000,
	0x0204000402000000,
	0x0040200020400000,
	0x00a0100010a00000,
	0x0050880088500000,
	0x0028440044280000,
	0x0014220022140000,
	0x000a1100110a0000,
	0x0005080008050000,
	0x0002040004020000,
	0x0000402000204000,
	0x0000a0100010a000,
	0x0000508800885000,
	0x0000284400442800,
	0x0000142200221400,
	0x00000a1100110a00,
	0x0000050800080500,
	0x0000020400040200,
	0x0000004020002040,
	0x000000a0100010a0,
	0x0000005088008850,
	0x0000002844004428,
	0x0000001422002214,
	0x0000000a1100110a,
	0x0000000508000805,
	0x0000000204000402,
	0x0000000040200020,
	0x00000000a0100010,
	0x0000000050880088,
	0x0000000028440044,
	0x0000000014220022,
	0x000000000a110011,
	0x0000000005080008,
	0x0000000002040004,
	0x0000000000402000,
	0x0000000000a01000,
	0x0000000000508800,
	0x0000000000284400,
	0x0000000000142200,
	0x00000000000a1100,
	0x0000000000050800,
	0x0000000000020400,
};// N_ATTACK_MAPS


const long QR_ATTACK_MAPS[] = {
	0x7f80808080808080,
	0xbf40404040404040,
	0xdf20202020202020,
	0xef10101010101010,
	0xf708080808080808,
	0xfb04040404040404,
	0xfd02020202020202,
	0xfe01010101010101,
	0x807f808080808080,
	0x40bf404040404040,
	0x20df202020202020,
	0x10ef101010101010,
	0x08f7080808080808,
	0x04fb040404040404,
	0x02fd020202020202,
	0x01fe010101010101,
	0x80807f8080808080,
	0x4040bf4040404040,
	0x2020df2020202020,
	0x1010ef1010101010,
	0x0808f70808080808,
	0x0404fb0404040404,
	0x0202fd0202020202,
	0x0101fe0101010101,
	0x8080807f80808080,
	0x404040bf40404040,
	0x202020df20202020,
	0x101010ef10101010,
	0x080808f708080808,
	0x040404fb04040404,
	0x020202fd02020202,
	0x010101fe01010101,
	0x808080807f808080,
	0x40404040bf404040,
	0x20202020df202020,
	0x10101010ef101010,
	0x08080808f7080808,
	0x04040404fb040404,
	0x02020202fd020202,
	0x01010101fe010101,
	0x80808080807f8080,
	0x4040404040bf4040,
	0x2020202020df2020,
	0x1010101010ef1010,
	0x0808080808f70808,
	0x0404040404fb0404,
	0x0202020202fd0202,
	0x0101010101fe0101,
	0x8080808080807f80,
	0x404040404040bf40,
	0x202020202020df20,
	0x101010101010ef10,
	0x080808080808f708,
	0x040404040404fb04,
	0x020202020202fd02,
	0x010101010101fe01,
	0x808080808080807f,
	0x40404040404040bf,
	0x20202020202020df,
	0x10101010101010ef,
	0x08080808080808f7,
	0x04040404040404fb,
	0x02020202020202fd,
	0x01010101010101fe,
};// QR_ATTACK_MAPS


const long QB_ATTACK_MAPS[] = {
	0x0040201008040201,
	0x00a0100804020100,
	0x0050880402010000,
	0x0028448201000000,
	0x0014224180000000,
	0x000a112040800000,
	0x0005081020408000,
	0x0002040810204080,
	0x4000402010080402,
	0xa000a01008040201,
	0x5000508804020100,
	0x2800284482010000,
	0x1400142241800000,
	0x0a000a1120408000,
	0x0500050810204080,
	0x0200020408102040,
	0x2040004020100804,
	0x10a000a010080402,
	0x8850005088040201,
	0x4428002844820100,
	0x2214001422418000,
	0x110a000a11204080,
	0x0805000508102040,
	0x0402000204081020,
	0x1020400040201008,
	0x0810a000a0100804,
	0x0488500050880402,
	0x8244280028448201,
	0x4122140014224180,
	0x20110a000a112040,
	0x1008050005081020,
	0x0804020002040810,
	0x0810204000402010,
	0x040810a000a01008,
	0x0204885000508804,
	0x0182442800284482,
	0x8041221400142241,
	0x4020110a000a1120,
	0x2010080500050810,
	0x1008040200020408,
	0x0408102040004020,
	0x02040810a000a010,
	0x0102048850005088,
	0x0001824428002844,
	0x0080412214001422,
	0x804020110a000a11,
	0x4020100805000508,
	0x2010080402000204,
	0x0204081020400040,
	0x0102040810a000a0,
	0x0001020488500050,
	0x0000018244280028,
	0x0000804122140014,
	0x00804020110a000a,
	0x8040201008050005,
	0x4020100804020002,
	0x0102040810204000,
	0x000102040810a000,
	0x0000010204885000,
	0x0000000182442800,
	0x0000008041221400,
	0x0000804020110a00,
	0x0080402010080500,
	0x8040201008040200,
};// QB_ATTACK_MAPS
